apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: frontend-html
              mountPath: /usr/share/nginx/html
      volumes:
        - name: frontend-html
          configMap:
            name: frontend-html
        - name: nginx-config
          configMap:
            name: frontend-nginx-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-html
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Frontend</title>
        <script>
            async function saveData() {
                try {
                    const response = await fetch("http://backend:8080", {
                        method: "GET",
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    const data = await response.json();
                    document.getElementById("result").innerText = JSON.stringify(data, null, 2);
                } catch (error) {
                    console.error("Error fetching data:", error);
                    document.getElementById("result").innerText = "Error fetching data.";
                }
            }
        </script>
    </head>
    <body>
        <h1>Frontend</h1>
        <button onclick="saveData()">Fetch Data from Backend</button>
        <pre id="result"></pre>
    </body>
    </html>

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-config
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /api/ {
            proxy_pass http://backend:8080/;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";
        }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: frontend
